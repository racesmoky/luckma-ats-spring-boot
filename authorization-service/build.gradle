buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "net.ltgt.apt" version "0.9"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.emprovise.service'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext {
	springCloudVersion = 'Finchley.RELEASE'
	mapstructVersion = "1.2.0.Final"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	compile('org.slf4j:slf4j-api')
	compile('de.codecentric:spring-boot-admin-starter-client:2.0.4')
	runtime('net.logstash.logback:logstash-logback-encoder:5.1')
	runtime('org.postgresql:postgresql:42.2.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	apt "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

processResources {
	filesMatching("**/application.properties") {
		expand(project.properties)
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
}

task runJar(type: JavaExec, dependsOn: jar) {
	main = "-jar"
	args jar.archivePath
}
